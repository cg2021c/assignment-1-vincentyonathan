function main() {
    // Access the canvas through DOM: Document Object Model
    var canvas = document.getElementById('myCanvas');   // The paper
    var gl = canvas.getContext('webgl');                // The brush and the paints

    var vertices = [
        //Background Right
        0.05507,0.35131, 0.1, 0.1, 0.1, 
        0.07736,-0.07955, 0.1, 0.1, 0.1, 
        0.79049,-0.07955, 0.1, 0.1, 0.1,
        0.79049,-0.07955, 0.1, 0.1, 0.1,
        0.81278,0.35131, 0.1, 0.1, 0.1,
        0.05507,0.35131, 0.1, 0.1, 0.1, 

        //3D Right
        0.0755,0.37731, 0.2, 0.2, 0.2, //I
        0.05507,0.35131, 0.2, 0.2, 0.2, //J
        0.81278,0.35131, 0.2, 0.2, 0.2, //K 
        0.81278,0.35131, 0.2, 0.2, 0.2, //K
        0.78864,0.37731, 0.2, 0.2, 0.2, //L
        0.0755,0.37731, 0.2, 0.2, 0.2, //I

        //Screen Right
        0.11076,0.32463,0.3, 0.3, 0.3,
        0.1304,-0.05066,0.3, 0.3, 0.3,
        0.72575,-0.04476,0.3, 0.3, 0.3,
        0.72575,-0.04476,0.3, 0.3, 0.3,
        0.73754,0.32463,0.3, 0.3, 0.3,
        0.11076,0.32463,0.3, 0.3, 0.3,

        //Button Right
        0.583,0.38178,0.18, 0.18, 0.18,
        0.61595,0.38467, 0.18, 0.18, 0.18, //Center
        0.57382,0.37661, 0.18, 0.18, 0.18, 
        0.57382,0.37661, 0.18, 0.18, 0.18, 
        0.61595,0.38467, 0.18, 0.18, 0.18, //Center
        0.58869,0.3698, 0.18, 0.18, 0.18,
        0.58869,0.3698, 0.18, 0.18, 0.18,  
        0.61595,0.38467, 0.18, 0.18, 0.18, //Center
        0.6017,0.36732, 0.18, 0.18, 0.18,
        0.6017,0.36732, 0.18, 0.18, 0.18,
        0.61595,0.38467, 0.18, 0.18, 0.18, //Center
        0.61409,0.36546, 0.18, 0.18, 0.18, 
        0.61409,0.36546, 0.18, 0.18, 0.18, 
        0.61595,0.38467, 0.18, 0.18, 0.18, //Center
        0.62525,0.36546, 0.18, 0.18, 0.18,
        0.62525,0.36546, 0.18, 0.18, 0.18,
        0.61595,0.38467, 0.18, 0.18, 0.18, //Center
        0.63764,0.3667, 0.18, 0.18, 0.18,
        0.63764,0.3667, 0.18, 0.18, 0.18,  
        0.61595,0.38467, 0.18, 0.18, 0.18, //Center
        0.65018,0.37002, 0.18, 0.18, 0.18,
        0.65018,0.37002, 0.18, 0.18, 0.18,
        0.61595,0.38467, 0.18, 0.18, 0.18, //Center
        0.65834,0.37376, 0.18, 0.18, 0.18,
        0.65834,0.37376, 0.18, 0.18, 0.18, 
        0.61595,0.38467, 0.18, 0.18, 0.18, //Center
        0.66,0.38, 0.18, 0.18, 0.18,
    

        //Background Left
        -0.92782,0.32622, 0.1, 0.1, 0.1, //C
        -0.86509,-0.0953, 0.1, 0.1, 0.1, //D
        -0.10736,-0.09028, 0.1, 0.1, 0.1, //E
        -0.10736,-0.09028, 0.1, 0.1, 0.1, //E
        -0.07725,0.33877, 0.1, 0.1, 0.1, //F
        -0.92782,0.32622, 0.1, 0.1, 0.1, //C

        //3D Left
        -0.89269,0.36637, 0.2, 0.2, 0.2, //G
        -0.92782,0.32622, 0.2, 0.2, 0.2, //C
        -0.07725,0.33877, 0.2, 0.2, 0.2, //F
        -0.07725,0.33877, 0.2, 0.2, 0.2, //F
        -0.10234,0.37891, 0.2, 0.2, 0.2, //H
        -0.89269,0.36637, 0.2, 0.2, 0.2, //G

        //Lens Left
        -0.2,0, 0.12, 0.12, 0.12, //B1
        -0.38084,0.11797, 0.12, 0.12, 0.12, //I
        -0.18263, 0.05273, 0.12, 0.12, 0.12, //A1
        -0.18263, 0.05273, 0.12, 0.12, 0.12, //A1
        -0.38084,0.11797, 0.12, 0.12, 0.12, //I
        -0.1751,0.10041, 0.12, 0.12, 0.12, //Z
        -0.1751,0.10041, 0.12, 0.12, 0.12, //Z
        -0.38084,0.11797, 0.12, 0.12, 0.12, //I
        -0.18012,0.14557, 0.12, 0.12, 0.12, //W
        -0.18012,0.14557, 0.12, 0.12, 0.12, //W
        -0.38084,0.11797, 0.12, 0.12, 0.12, //I
        -0.2,0.2, 0.12, 0.12, 0.12, //V
        -0.2,0.2, 0.12, 0.12, 0.12, //V
        -0.38084,0.11797, 0.12, 0.12, 0.12, //I
        -0.2303,0.24342, 0.12, 0.12, 0.12, //U
        -0.2303,0.24342, 0.12, 0.12, 0.12, //U
        -0.38084,0.11797, 0.12, 0.12, 0.12, //I
        -0.27296,0.28106, 0.12, 0.12, 0.12, //T
        -0.27296,0.28106, 0.12, 0.12, 0.12, //T
        -0.38084,0.11797, 0.12, 0.12, 0.12, //I
        -0.32815,0.30364, 0.12, 0.12, 0.12, //S
        -0.32815,0.30364, 0.12, 0.12, 0.12, //S
        -0.38084,0.11797, 0.12, 0.12, 0.12, //I
        -0.38586,0.30615, 0.12, 0.12, 0.12, //J
        -0.38586,0.30615, 0.12, 0.12, 0.12, //J
        -0.38084,0.11797, 0.12, 0.12, 0.12, //I
        -0.44859,0.2936, 0.12, 0.12, 0.12, //K
        -0.44859,0.2936, 0.12, 0.12, 0.12, //K
        -0.38084,0.11797, 0.12, 0.12, 0.12, //I
        -0.50379,0.26851, 0.12, 0.12, 0.12, //L
        -0.50379,0.26851, 0.12, 0.12, 0.12, //L
        -0.38084,0.11797, 0.12, 0.12, 0.12, //I
        -0.54393,0.24091, 0.12, 0.12, 0.12, 
        -0.54393,0.24091, 0.12, 0.12, 0.12, //M
        -0.38084,0.11797, 0.12, 0.12, 0.12, //I
        -0.56902,0.19324, 0.12, 0.12, 0.12, 
        -0.56902,0.19324, 0.12, 0.12, 0.12, 
        -0.38084,0.11797, 0.12, 0.12, 0.12, //I
        -0.58157,0.13804, 0.12, 0.12, 0.12,
        -0.58157,0.13804, 0.12, 0.12, 0.12, 
        -0.38084,0.11797, 0.12, 0.12, 0.12, //I
        -0.58451,0.07884, 0.12, 0.12, 0.12, 
        -0.58451,0.07884, 0.12, 0.12, 0.12, //P 
        -0.38084,0.11797, 0.12, 0.12, 0.12, //I
        -0.56195,0.02962, 0.12, 0.12, 0.12, 
        -0.56195,0.02962, 0.12, 0.12, 0.12, //Q
        -0.38084,0.11797, 0.12, 0.12, 0.12, //I 
        -0.52709,-0.02576, 0.12, 0.12, 0.12, //R

        //More Lense
        -0.50187,-0.06444, 0.1, 0.1, 0.1, //M2
        -0.38084,0.11797, 0.1, 0.1, 0.1, //I
        -0.46767,-0.09437, 0.1, 0.1, 0.1,
        -0.46767,-0.09437, 0.1, 0.1, 0.1, //L2
        -0.38084,0.11797, 0.1, 0.1, 0.1, //I
        -0.42491,-0.11005, 0.1, 0.1, 0.1, //K2
        -0.42491,-0.11005, 0.1, 0.1, 0.1,
        -0.38084,0.11797, 0.1, 0.1, 0.1, //I
        -0.37788,-0.11575, 0.1, 0.1, 0.1,
        -0.37788,-0.11575, 0.1, 0.1, 0.1,
        -0.38084,0.11797, 0.1, 0.1, 0.1, //I
        -0.32087,-0.10577, 0.1, 0.1, 0.1,
        -0.32087,-0.10577, 0.1, 0.1, 0.1,
        -0.38084,0.11797, 0.1, 0.1, 0.1, //I
        -0.27954,-0.08439, 0.1, 0.1, 0.1,
        -0.27954,-0.08439, 0.1, 0.1, 0.1, //H2
        -0.38084,0.11797, 0.1, 0.1, 0.1, //I
        -0.24818,-0.05161, 0.1, 0.1, 0.1,
        -0.24818,-0.05161, 0.1, 0.1, 0.1, //G2
        -0.38084,0.11797, 0.1, 0.1, 0.1, //I
        -0.22823,-0.02168, 0.1, 0.1, 0.1,
        -0.22823,-0.02168, 0.1, 0.1, 0.1, //F2
        -0.38084,0.11797, 0.1, 0.1, 0.1, //I
        -0.2154,0.0111, 0.1, 0.1, 0.1,
        -0.2154, 0.0111, 0.1, 0.1, 0.1, //E2
        -0.38084,0.11797, 0.1, 0.1, 0.1, //I
        -0.204, 0.04103, 0.1, 0.1, 0.1,
        -0.204, 0.04103, 0.1, 0.1, 0.1, //B1
        -0.38084,0.11797, 0.1, 0.1, 0.1, //I
        -0.19545,0.07523, 0.1, 0.1, 0.1,
        -0.19545,0.07523, 0.1, 0.1, 0.1, //A1
        -0.38084,0.11797, 0.1, 0.1, 0.1, //I
        -0.19403,0.11941, 0.1, 0.1, 0.1,
        -0.19403,0.11941, 0.1, 0.1, 0.1, //Z
        -0.38084,0.11797, 0.1, 0.1, 0.1, //I
        -0.20258,0.15932, 0.1, 0.1, 0.1,
        -0.20258,0.15932, 0.1, 0.1, 0.1, //W
        -0.38084,0.11797, 0.1, 0.1, 0.1, //I
        -0.22253,0.1921, 0.1, 0.1, 0.1,
        -0.22253,0.1921, 0.1, 0.1, 0.1, //V
        -0.38084,0.11797, 0.1, 0.1, 0.1, //I
        -0.25103,0.21775, 0.1, 0.1, 0.1,
        -0.25103,0.21775, 0.1, 0.1, 0.1, //U
        -0.38084,0.11797, 0.1, 0.1, 0.1, //I
        -0.28524,0.24056, 0.1, 0.1, 0.1,
        -0.28524,0.24056, 0.1, 0.1, 0.1, //T
        -0.38084,0.11797, 0.1, 0.1, 0.1, //I
        -0.32515,0.25624, 0.1, 0.1, 0.1,
        -0.32515,0.25624, 0.1, 0.1, 0.1, //S
        -0.38084,0.11797, 0.1, 0.1, 0.1, //I
        -0.37075,0.26336, 0.1, 0.1, 0.1,
        -0.37075,0.26336, 0.1, 0.1, 0.1, //J
        -0.38084,0.11797, 0.1, 0.1, 0.1, //I
        -0.40781,0.26194, 0.1, 0.1, 0.1,
        -0.40781,0.26194, 0.1, 0.1, 0.1, //K
        -0.38084,0.11797, 0.1, 0.1, 0.1, //I
        -0.44487,0.25054, 0.1, 0.1, 0.1,
        -0.44487,0.25054, 0.1, 0.1, 0.1, //L
        -0.38084,0.11797, 0.1, 0.1, 0.1, //I
        -0.4919,0.22203, 0.1, 0.1, 0.1,
        -0.4919,0.22203, 0.1, 0.1, 0.1, // M
        -0.38084,0.11797, 0.1, 0.1, 0.1, //I
        -0.52753,0.18212, 0.1, 0.1, 0.1,
        -0.52753,0.18212, 0.1, 0.1, 0.1, //N
        -0.38084,0.11797, 0.1, 0.1, 0.1, //I
        -0.54606,0.14364, 0.1, 0.1, 0.1,
        -0.54606,0.14364, 0.1, 0.1, 0.1, //O
        -0.38084,0.11797, 0.1, 0.1, 0.1, //I 
        -0.55746,0.08378, 0.1, 0.1, 0.1,
        -0.55746,0.08378, 0.1, 0.1, 0.1, //P
        -0.38084,0.11797, 0.1, 0.1, 0.1, //I
        -0.54891,0.0339, 0.1, 0.1, 0.1,
        -0.54891,0.0339, 0.1, 0.1, 0.1, //Q
        -0.38084,0.11797, 0.1, 0.1, 0.1, //I
        -0.52709,-0.02576, 0.1, 0.1, 0.1,
        -0.52709,-0.02576, 0.1, 0.1, 0.1, //R
        -0.38084,0.11797, 0.1, 0.1, 0.1, //I
        -0.50187, -0.06444, 0.1, 0.1, 0.1, //M2
    ];

    // Create a linked-list for storing the vertices data
    var buffer = gl.createBuffer();
    gl.bindBuffer(gl.ARRAY_BUFFER, buffer);
    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(vertices), gl.STATIC_DRAW);

    var vertexShaderSource = `
        attribute vec2 aPosition;
        attribute vec3 aColor;
        varying vec3 vColor;
        uniform float uChange;
        void main() {
            gl_Position = vec4(aPosition + uChange, 0.0, 1.0);
            vColor = aColor;
        }
    `;

    var fragmentShaderSource = `
        precision mediump float;
        varying vec3 vColor;
        void main() {
            gl_FragColor = vec4(vColor, 1.0);
        }
    `;

    // Create .c in GPU
    var vertexShader = gl.createShader(gl.VERTEX_SHADER);
    gl.shaderSource(vertexShader, vertexShaderSource);
    var fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);
    gl.shaderSource(fragmentShader, fragmentShaderSource);

    // Compile .c into .o
    gl.compileShader(vertexShader);
    gl.compileShader(fragmentShader);

    // Prepare a .exe shell (shader program)
    var shaderProgram = gl.createProgram();

    // Put the two .o files into the shell
    gl.attachShader(shaderProgram, vertexShader);
    gl.attachShader(shaderProgram, fragmentShader);

    // Link the two .o files, so together they can be a runnable program/context.
    gl.linkProgram(shaderProgram);

    // Start using the context (analogy: start using the paints and the brushes)
    gl.useProgram(shaderProgram);

    // Teach the computer how to collect
    //  the positional values from ARRAY_BUFFER
    //  to each vertex being processed
    var aPosition = gl.getAttribLocation(shaderProgram, "aPosition");
    gl.vertexAttribPointer(
        aPosition, 
        2, 
        gl.FLOAT, 
        false, 
        5 * Float32Array.BYTES_PER_ELEMENT, 
        0
    );
    gl.enableVertexAttribArray(aPosition);
    var aColor = gl.getAttribLocation(shaderProgram, "aColor");
    gl.vertexAttribPointer(
        aColor,
        3,
        gl.FLOAT,
        false, 
        5 * Float32Array.BYTES_PER_ELEMENT,
        2 * Float32Array.BYTES_PER_ELEMENT
    );
    gl.enableVertexAttribArray(aColor);

    // Interactive graphics with mouse
    var freeze = false;
    function onMouseClick(event) {
        freeze = !freeze;
    }
    document.addEventListener("click", onMouseClick);
    // Interactive graphics with keyboard
    function onKeydown(event) {
        if (event.keyCode == 32)
        {
            freeze = true;
        }
    }
    function onKeyup(event)
    {
        if(event.keyCode == 32)
        {
            freeze = false;
        }
    }
    document.addEventListener("keydown", onKeydown);
    document.addEventListener("keyup", onKeyup);
    var speedRaw = 1;
    var speed = speedRaw / 600;
    var change = 0;
    var uChange = gl.getUniformLocation(shaderProgram, "uChange");
    function render() {
        if (!freeze) {  // If it is not freezing, then animate the rectangle
            if (change >= 0.5 || change <= -0.5) speed = -speed;
            change = change + speed;
            gl.uniform1f(uChange, change);
        }
        gl.clearColor(0.0, 0.0, 0.0, 0.2);
        gl.clear(gl.COLOR_BUFFER_BIT);
        var primitive = gl.TRIANGLES;
        var offset = 0;
        var nVertex = vertices.length;
        gl.drawArrays(primitive, offset, nVertex);
        // requestAnimationFrame(render);
    }
    requestAnimationFrame(render);
}